---
version: '3.8'
services:

  # Container that will build the frontend JS app bundle, put it in the jsbuild
  # volume, and exit.
 
  build-front:
    build: ./frontend/.
    environment:
      - NODE_ENV=production
    volumes:
        - jsbuild:/opt/jsbuild:rw
    stdin_open: false
    tty: true

  # Container that will execute a supervisor with 4 child processes:
  # shibauthorizer, shibresponder, and shibd (which together will act as a SAML
  # SP) and an NGINX, that will use Shibboleth to secure certain locations,
  # proxy the edusign backen app at the www container, and serve the js bundles
  # from the jsbuild volume.

  sp:
    build: ./nginx/
    expose:
      - 80
      - 443
    networks:
      edusign:
        ipv4_address: 172.20.10.203
    volumes:
      - jsbuild:/opt/edusign/jsbuild:ro
      - edusignlogs:/var/log/edusign:rw
    environment:
      - "HOSTNAME=${SERVER_NAME}"
    depends_on:
      - build-front

  # Container that will execute a gunicorn process driving the edusign backen
  # app.

  www:
    build: ./backend/.
    networks:
      edusign:
        ipv4_address: 172.20.10.204
    expose:
      - 8080
    volumes:
      - edusignlogs:/var/log/edusign:rw
    environment:
      - "PYTHONPATH=/opt/edusign/edusign-webapp/src"
    env_file: .env
    depends_on:
      - sp

volumes:

  # Volume to hold all the interestingg logs

  edusignlogs:
    name: edusignlogs

  # Volume to hold the frontend app js bundles.

  jsbuild:
    name: jsbuild

networks:
  edusign:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-edusign
    ipam:
      driver: default
      config:
      - subnet: 172.20.10.0/24

